pipeline {
    agent any

    stages {
             
        stage('Build') {
            steps {
                sh 'docker-compose build --no-cache'
                }
            }
 
        stage('Deployclone') {
            steps {
                sh 'docker-compose up'
                def autoCancelled = false

                try {
                  stage('checkout') {
                   
                    if ('[32mspringbootangularprojectstart_user-service_1 exited with code 1') {
                      autoCancelled = true
                      return
                    }
                 }
                 if (autoCancelled) {
                     error('Aborting the build to prevent a loop.')
                     // return would be also possible but you have to be sure to quit all stages and wrapper properly
                     // return
                   }
                } catch (e) {
                  if (autoCancelled) {
                    currentBuild.result = 'ABORTED'
                    echo('Skipping mail notification')
                    // return here instead of throwing error to keep the build "green"
                    return
               }
              // normal error handling
              throw e
             }     
                
            }
        }
        
        stage('Executing_database') {
            steps {
                sh 'docker run --name demo -e MYSQL_ROOT_PASSWORD=demo -d mysql:latest'
                }
            }
            
         stage('Deploy') {
            steps {
                sh 'docker-compose up'
            }
        }
    }
}
